<?xml version="1.0" encoding="UTF-8" ?>
<schema name="songs_schema" version="1.6">

    <uniqueKey>id</uniqueKey>

    <fields>
    <field name="id" type="string" indexed="true" stored="true"  multiValued="false" required="true"/> 
    <field name="title" type="text_general" indexed="true" stored="true" multiValued="true"/>
    <field name="title_suggest" type="text_suggest" indexed="true" stored="false" multiValued="true"/>
    <field name="title_ngram" type="text_ngram" indexed="true" stored="false" multiValued="true"/>
    <field name="title_edge" type="text_edge" indexed="true" stored="false" multiValued="true"/>
    <dynamicField name="*"  type="string"     indexed="true" stored="true"  multiValued="true"/>
    </fields>
    <copyField source="title" dest="title_suggest"/>
    <copyField source="title" dest="title_ngram"/>
    <copyField source="title" dest="title_edge"/>

    <fieldType name="string" class="solr.StrField" sortMissingLast="true" />
    
    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
        <analyzer>
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        </analyzer>
    </fieldType>

    <fieldType name="text_suggest" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <charFilter class="solr.PatternReplaceFilterFactory" pattern="([`'\?:,;]+)" replacement=" " />
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory"
              generateWordParts="1"
              generateNumberParts="1"
              catenateWords="1"
              catenateNumbers="1"
              catenateAll="1"
              splitOnCaseChange="1"
              splitOnNumerics="1"
              preserveOriginal="1"
        />
        <filter class="solr.LowerCaseFilterFactory"/>
        <charFilter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement=" "/>
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory"
              generateWordParts="0"
              generateNumberParts="0"
              catenateWords="0"
              catenateNumbers="0"
              catenateAll="0"
              splitOnCaseChange="0"
              splitOnNumerics="0"
        />
        <filter class="solr.LowerCaseFilterFactory"/>
        <charFilter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement=" " />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
      </analyzer>
    </fieldType>

    <fieldType name="text_edge" class="solr.TextField">
      <analyzer type="index">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.KeywordTokenizerFactory" />
        <filter class="solr.LowerCaseFilterFactory"/>
        <charFilter class="solr.PatternReplaceFilterFactory" pattern="/\(([^)]+)\)/;" replacement=" " />
        <filter class="solr.EdgeNGramFilterFactory" maxGramSize="30" minGramSize="3"/>
        <charFilter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement="" />
        <charFilter class="solr.PatternReplaceFilterFactory" pattern="\W+" replacement=""/>
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <charFilter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement="" />
        <charFilter class="solr.PatternReplaceFilterFactory" pattern="^(.{30})(.*)?" replacement="$1" />
        <charFilter class="solr.PatternReplaceFilterFactory" pattern="\W+" replacement=""/>
      </analyzer>
    </fieldType>

    <fieldType name="text_ngram" class="solr.TextField">
      <analyzer type="index">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EdgeNGramFilterFactory" maxGramSize="20" minGramSize="3"/>
        <charFilter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement="" />
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <charFilter class="solr.PatternReplaceFilterFactory" pattern="([^\w\d\*æøåÆØÅ ])" replacement="" />
        <charFilter class="solr.PatternReplaceFilterFactory" pattern="^(.{20})(.*)?" replacement="$1" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
      </analyzer>
    </fieldType>

</schema>
